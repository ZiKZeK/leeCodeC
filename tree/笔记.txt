满二叉树：全满
完全二叉树：只有最后一层能空，而且是从左到右有值
二叉搜索树：左小于父， 右大于父
平衡二叉搜索树(Adelson-Velsky and Landis)：空树， 或者左右两边的的树
的高度的绝对值不会大于1
C++中平衡二叉搜索树实现：
map, set,  multimap, multiset
哈希表：
unordered_map, unordered_set

二叉树的存储方式；可链 可顺序
链结构：每个节点的表示
{
int val
int * left
int * right}
顺序存储：从左到右，从上到下


二叉树的遍历方式：
深度优先遍历： 遇到叶子返回 1，前序遍历（中左右）
 2，中序遍历 （左中右）
3，后续遍历（左右中）
广度优先遍历： 一层一层遍历 层次遍历